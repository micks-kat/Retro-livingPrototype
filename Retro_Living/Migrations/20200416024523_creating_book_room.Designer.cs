// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Retro_Living.Models;

namespace Retro_Living.Migrations
{
    [DbContext(typeof(RetroLivingContext))]
    [Migration("20200416024523_creating_book_room")]
    partial class creating_book_room
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.2.20159.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Retro_Living.Models.Book", b =>
                {
                    b.Property<int>("b_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("booking_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("check_in_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("check_out_time")
                        .HasColumnType("datetime2");

                    b.HasKey("b_id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Retro_Living.Models.Hotel", b =>
                {
                    b.Property<int>("h_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("h_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("h_contacts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("h_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("h_email_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("h_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("h_id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("Retro_Living.Models.Hotel_Room", b =>
                {
                    b.Property<int>("room_id")
                        .HasColumnType("int");

                    b.Property<int>("h_id")
                        .HasColumnType("int");

                    b.HasKey("room_id", "h_id");

                    b.HasIndex("h_id");

                    b.ToTable("hotel_rooms");
                });

            modelBuilder.Entity("Retro_Living.Models.Room", b =>
                {
                    b.Property<int>("room_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bookb_id")
                        .HasColumnType("int");

                    b.Property<string>("room_availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("room_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("room_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("room_id");

                    b.HasIndex("Bookb_id");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Retro_Living.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("user_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_contacts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_email_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_type")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Retro_Living.Models.User_Hotel", b =>
                {
                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("h_id")
                        .HasColumnType("int");

                    b.HasKey("user_id", "h_id");

                    b.HasIndex("h_id");

                    b.ToTable("User_Hotel");
                });

            modelBuilder.Entity("Retro_Living.Models.Hotel_Room", b =>
                {
                    b.HasOne("Retro_Living.Models.Hotel", "hotel")
                        .WithMany("hotel_room")
                        .HasForeignKey("h_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retro_Living.Models.Room", "room")
                        .WithMany("hotel_room")
                        .HasForeignKey("room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Retro_Living.Models.Room", b =>
                {
                    b.HasOne("Retro_Living.Models.Book", "Book")
                        .WithMany("room")
                        .HasForeignKey("Bookb_id");
                });

            modelBuilder.Entity("Retro_Living.Models.User_Hotel", b =>
                {
                    b.HasOne("Retro_Living.Models.Hotel", "hotel")
                        .WithMany("user_hotels")
                        .HasForeignKey("h_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Retro_Living.Models.User", "user")
                        .WithMany("user_hotels")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
